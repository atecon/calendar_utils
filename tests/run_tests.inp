set verbose off
set assert stop
clear

include "./src/calendar_utils.inp" --force


nulldata 6
series y = normal()
scalar T = 3
setobs T 1:1 --stacked-time-series
function void test_create_iso8601_series_pl (void)
    print "Start with create_iso8601_series() for panel."

    series x = create_iso8601_series(20200101)

    assert(x[1] == 20200101)
    assert(x[2] == 20200102)
    assert(x[3] == 20200103)
    assert(x[4] == 20200101)
    assert(x[5] == 20200102)
    assert(x[6] == 20200103)
end function
test_create_iso8601_series_pl()


nulldata 3
series y = normal()
setobs 7 2020-01-01 --time-series
function void test_create_iso8601_series_ts (void)
    print "Start with create_iso8601_series() for timeseries."

    series x = create_iso8601_series(20200101)

    assert(x[1] == 20200101)
    assert(x[2] == 20200102)
    assert(x[3] == 20200103)
end function
test_create_iso8601_series_ts()


function void test_date_to_iso8601 (void)
    print "Start testing date_to_iso8601()."

    string date1 = "2020-09-03"
    string date2 = "20200903"
    string date3 = "03-09-2020"
    string date4 = "03/09/2020"
    string date5 = "1984"

    scalar iso1 = date_to_iso8601(date1, "%Y-%m-%d")
    scalar iso2 = date_to_iso8601(date2, "%Y%m%d")
    scalar iso3 = date_to_iso8601(date3, "%d-%m-%Y")
    scalar iso4 = date_to_iso8601(date4, "%d/%m/%Y")
    scalar iso5 = date_to_iso8601("1984", "%Y")

    assert(iso1 == 20200903)
    assert(iso2 == 20200903)
    assert(iso3 == 20200903)
    assert(iso4 == 20200903)
    assert(iso5 == 19840101)
end function
test_date_to_iso8601()


nulldata 3
series y = normal()
function void test_dates_to_iso8601 (void)
    print "Start with dates_to_iso8601()."

    series x = seq(1, 3)'
    strings dates = defarray("2020-09-01", "2020-09-02", "2020-09-03")
    stringify(x, dates)

    series y = dates_to_iso8601(x, "%Y-%m-%d")

    assert(y[1] == 20200901)
    assert(y[2] == 20200902)
    assert(y[3] == 20200903)


    delete x --force
    series x = seq(1, 3)'
    strings dates = defarray("01-09-2020", "02-09-2020", "03-09-2020")
    stringify(x, dates)

    series y = dates_to_iso8601(x, "%d-%m-%Y")

    assert(y[1] == 20200901)
    assert(y[2] == 20200902)
    assert(y[3] == 20200903)
end function
test_dates_to_iso8601()


nulldata 6
series y = normal()
scalar T = 3
setobs T 1:1 --stacked-time-series
function void test_dates_to_iso8601_panel (void)
    print "Start with dates_to_iso8601() for panel."

    series x = seq(1, 3)' | seq(1, 3)'
    strings dates = defarray("2020-09-01", "2020-09-02", "2020-09-03")
    stringify(x, dates)

    series y = dates_to_iso8601(x, "%Y-%m-%d")

    assert(y[1] == 20200901)
    assert(y[2] == 20200902)
    assert(y[3] == 20200903)
    assert(y[4] == 20200901)
    assert(y[5] == 20200902)
    assert(y[6] == 20200903)

    delete x --force
    series x = seq(1, 3)' | seq(1, 3)'
    strings dates = defarray("01-09-2020", "02-09-2020", "03-09-2020")
    stringify(x, dates)

    series y = dates_to_iso8601(x, "%d-%m-%Y")

    assert(y[1] == 20200901)
    assert(y[2] == 20200902)
    assert(y[3] == 20200903)
    assert(y[4] == 20200901)
    assert(y[5] == 20200902)
    assert(y[6] == 20200903)
end function
test_dates_to_iso8601_panel()

function void test_numeric_to_ext_iso8601 (void)
    print "Start with numeric_to_extended_iso8601()."

    scalar date1 = 19710130
    scalar date2 = 18440728
    scalar date3 = 20201014
    scalar date4 = 20201410

    assert(numeric_to_extended_iso8601(date1) == "1971-01-30")
    assert(numeric_to_extended_iso8601(date2) == "1844-07-28")
    assert(numeric_to_extended_iso8601(date3) == "2020-10-14")
    assert(numeric_to_extended_iso8601(date4) == "")
end function
test_numeric_to_ext_iso8601()

quit
