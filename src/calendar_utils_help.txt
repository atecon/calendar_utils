Collection of date time related tools.

Most functions are convenience functions for working with date strings and date
string series.

Please ask questions and report bugs on the gretl mailing list if possible.
Alternatively, create an issue ticket on the github repo (see below). Source
code and test script(s) can be found here:
https://github.com/atecon/calendar_utils



PUBLIC FUNCTIONS:
-----------------------------------------------------------------------
Function:       date_to_iso8601(const string date, const string date_format)

Arguments:
date:           string, Date string
date_format:    string, Format of 'date', e.g. "%Y-%m-%d"


Return:
Scalar value of cast 'date' in the numeric ISO8601 format (YYYYMMDD) in case of
no error. In case of an error, return zero (FALSE).
Internally, gretl's built-in functions strptime() and strftime() are used. See
the help on these functions for more details.

WARNING: Prior to version 2021e, a bug in gretl's strptime() led to incorrect
results if the date input did not specify a day of the month. So if you're
running gretl 2021d or earlier you should ensure that date strings include day
of month. This restriction is lifted in gretl 2021e or higher: it's OK to
specify a year only, or just year and month. In all cases the fields in the date
string should match those in the date_format_string.
See here:
https://gretlml.univpm.it/hyperkitty/list/gretl-devel@gretlml.univpm.it/message/6ENWKDGSYB32ZFKHENLPFJSS3X22JGYB/
-----------------------------------------------------------------------

-----------------------------------------------------------------------
Function:       dates_to_iso8601(const series dates, const string date_format)

Arguments:
dates:          series, Series of date strings
date_format:    string, Format of 'dates', e.g. "%Y-%m-%d"


Return:
Series holding cast values of 'dates' in the numeric ISO8601 format (YYYYMMDD)
in case of no error at the i-th entry. In case of an error at the i-th entry,
return zero (FALSE).

See warning on date_to_iso8601().
-----------------------------------------------------------------------


-----------------------------------------------------------------------
Function:       iso8601_to_dates(const series dates)

Arguments:
dates:          series, Series of numeric ISO8601 dates


Return:
String array holding cast values of 'dates' in extended ISO8601 format
(default: YYYY-MM-DD). Missing values in 'dates' are handled as an empty
string in the returned array. This is a kind of reverse function to the
dates_to_iso8601() function.
-----------------------------------------------------------------------


-----------------------------------------------------------------------
Function:       create_iso8601_series(const scalar init_date)

REMOVED SINCE VERSION 0.5.

Use gretl's built-in facility instead. To be concrete, set the dataset
structure by means of the 'setobs' command. For a daily time-series by:
  <setobs 7 2020-01-01 --time-series>
and for a panel dataset with daily frequency by:
    <setobs 7 2020-01-01 --panel-time>
The numeric ISO8601 series can be obtained by the accessor '$obsdate'.
-----------------------------------------------------------------------


-----------------------------------------------------------------------
Function:       numeric_to_extended_iso8601(const int date)

Arguments:
date:           int, Numeric date in ISO8601 format (YYYYMMDD)


Return:
Date string in the extended ISO8601 date format (YYYY-MM-DD). Return empty
string at the i-th position in case the i-th 'dates' entry has not the right
format.
-----------------------------------------------------------------------


-----------------------------------------------------------------------
Function:       gdate_to_iso8601(string date, string frequency[null])

Arguments:
date:           string, Date string in the gretl format, e.g. '%Y:%m' or
                '%Y.%m'
frequency:      string, Frequency of the date string, either 'monthly' or
                        'quarterly' (optional); if not specified, the
                        periodicity of the active dataset will be determined.


Return:
ISO8601 date integer (YYYYMMDD) if the 'frequency' is monthly or quarterly.
Internally, gretl's built-in functions strptime() and strftime() are used. See
the help on these functions for more details.
-----------------------------------------------------------------------


-----------------------------------------------------------------------
Function:       datetime_components(const strings ts, string format[null])

Extract the date and time components of a datetime string (timestamp).

Arguments:
ts:             strings, Datetime string (timestamp)
format:         string, Format of timestamp; default: "%Y-%m-%d %H:%M"


Return:
Bundle including various components:
  date:         strings, Dates in the extended ISO8601 format (%Y-%m-%d)
  second1970:   matrix, Column vector holding the number of seconds since the
                start of 1970 according to Coordinated Universal Time (see
                also gretl's strptime() function)
  time:         strings, Array of time strings in the format %H:%M and ':%s'
                if 'format' includes seconds.
  year:         matrix, Column vector holding the year values.
  month:        matrix, Column vector holding the month values.
  day:          matrix, Column vector holding the day of month values.
  hour:         matrix, Column vector holding hourly values.
  minute:       matrix, Column vector holding minute values.
  second:       matrix, Column vector holding the second values if available.
-----------------------------------------------------------------------


Changelog
---------
- v0.5, December 2023:
    + Add new datetime_components() function.
    + Remove function create_iso8601_series() and add a hint on how to mimic
      the function using gretl commands.
    + Improve help text on how errors are handled for the iso8601_to_dates()
      function.
    + Both dates_to_iso8601() and date_to_iso8601() catch an eventual error
      and return zero in this error case.
- v0.4, January 2022:
    + New iso8601_to_dates() function
- v0.3, October 2021:
    + Improved help text
    + New gdate_to_iso8601() function
- v0.2, October 2020:
    + Add new function numeric_to_extended_iso8601()
- v0.1, October 2020:
    + Initial release
