clear
set verbose off

include calendar_utils.gfn

# Cast date string to numeric ISO8601 format
string date1 = "2020-09-03"
string date2 = "20200903"
string date3 = "03-09-2020"
string date4 = "03/09/2020"

scalar iso1 = date_to_iso8601(date1, "%Y-%m-%d")
scalar iso2 = date_to_iso8601(date2, "%Y%m%d")
scalar iso3 = date_to_iso8601(date3, "%d-%m-%Y")
scalar iso4 = date_to_iso8601(date4, "%d/%m/%Y")

print iso1 iso2 iso3 iso4

# Cast numeric ISO8601 format back to extended ISO8601 date string (use iso8601_to_string)
strings date1_cast_arr = iso8601_to_string(iso1)  # always returns a string array
string date1_cast = date1_cast_arr[1]             # cast to string

print date1_cast_arr date1_cast

/* Suppose you have a vector or series of dates in the numeric ISO8601 format.
   And you want to create an array of strings in the extended ISO8601
   format which can be used for display or further string processing. */
nulldata 3
matrix mat = {20220101, 20220201, 20220103}'
series input = mat

strings dates_mat = iso8601_to_string(mat)
strings dates_input = iso8601_to_string(input)

# You get the same result for matrix and series inputs
print dates_mat dates_input

# If you want to attach these strings as series labels use 'stringify'
series idx = seq(1, $nobs)'
stringify(idx, dates_input)
print input idx -o



/* Now assume you have a date string series but you want to cast these
string dates to numerical ISO8601 format. */
nulldata 6
series z = seq(1, 3)' | seq(1, 3)'
strings dates = defarray("2020-09-01", "2020-09-02", "2020-09-03")
stringify(z, dates)

series y = dates_to_iso8601(z, "%Y-%m-%d")
print z y -o


/* You may also want to use gretl's date format for date strings. */
eval gdate_to_iso8601("1994:1", "monthly")
eval gdate_to_iso8601("1994:1", "quarterly")
eval gdate_to_iso8601("1994.12", "monthly")

/*  If the active dataset is of type panel or time-series, the frequency
is internally determined. */
setobs 12 2020:1 --time-series  # monthly frequency
eval gdate_to_iso8601("1994:1")
eval gdate_to_iso8601("1994:1")
eval gdate_to_iso8601("1994.12")


# Datetime components
nulldata 2
# with seconds
strings ts = defarray("2022-12-07 00:00:33", "2022-12-13 14:43:12")
string format = "%Y-%m-%d %H:%M:%S"
bundle B = datetime_components(ts, format)
print B

series hour = B.hour
series minute = B.minute
series date = B.date
series second1970 = B.second1970
print date hour minute second1970 -o

